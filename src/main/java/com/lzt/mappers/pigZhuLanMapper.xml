<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lzt.dao.pigZhuLanMapper" >
  <resultMap id="BaseResultMap" type="com.lzt.entity.pigZhuLan" >
    <id column="zl_id" property="zlId" jdbcType="VARCHAR" />
    <result column="zs_id" property="zsId" jdbcType="VARCHAR" />
    <result column="zl_name" property="zlName" jdbcType="VARCHAR" />
    <result column="zl_type" property="zlType" jdbcType="INTEGER" />
    <result column="pig_num" property="pigNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    zl_id, zs_id, zl_name, zl_type, pig_num, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from pig_zhu_lan
    where zl_id = #{zlId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from pig_zhu_lan
    where zl_id = #{zlId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lzt.entity.pigZhuLan" >
    insert into pig_zhu_lan (zl_id, zs_id, zl_name, 
      zl_type, pig_num, create_time, 
      update_time)
    values (#{zlId,jdbcType=VARCHAR}, #{zsId,jdbcType=VARCHAR}, #{zlName,jdbcType=VARCHAR}, 
      #{zlType,jdbcType=INTEGER}, #{pigNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lzt.entity.pigZhuLan" >
    insert into pig_zhu_lan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="zlId != null" >
        zl_id,
      </if>
      <if test="zsId != null" >
        zs_id,
      </if>
      <if test="zlName != null" >
        zl_name,
      </if>
      <if test="zlType != null" >
        zl_type,
      </if>
      <if test="pigNum != null" >
        pig_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="zlId != null" >
        #{zlId,jdbcType=VARCHAR},
      </if>
      <if test="zsId != null" >
        #{zsId,jdbcType=VARCHAR},
      </if>
      <if test="zlName != null" >
        #{zlName,jdbcType=VARCHAR},
      </if>
      <if test="zlType != null" >
        #{zlType,jdbcType=INTEGER},
      </if>
      <if test="pigNum != null" >
        #{pigNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzt.entity.pigZhuLan" >
    update pig_zhu_lan
    <set >
      <if test="zsId != null" >
        zs_id = #{zsId,jdbcType=VARCHAR},
      </if>
      <if test="zlName != null" >
        zl_name = #{zlName,jdbcType=VARCHAR},
      </if>
      <if test="zlType != null" >
        zl_type = #{zlType,jdbcType=INTEGER},
      </if>
      <if test="pigNum != null" >
        pig_num = #{pigNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where zl_id = #{zlId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzt.entity.pigZhuLan" >
    update pig_zhu_lan
    set zs_id = #{zsId,jdbcType=VARCHAR},
      zl_name = #{zlName,jdbcType=VARCHAR},
      zl_type = #{zlType,jdbcType=INTEGER},
      pig_num = #{pigNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where zl_id = #{zlId,jdbcType=VARCHAR}
  </update>
</mapper>